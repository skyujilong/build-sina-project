{ module: 
   { noParse: /jquery|lodash|zepto/,
     rules: 
      [ { test: /\.(scss|css)$/,
          use: 
           [ { loader: 'D:\\playground\\webpack2\\node_modules\\.2.1.0@extract-text-webpack-plugin\\loader.js',
               options: { id: 1, omit: 1, remove: true } },
             { loader: 'style-loader' },
             { loader: 'css-loader?sourceMap' },
             { loader: 'postcss-loader?sourceMap=inline' },
             { loader: 'sass-loader' } ] },
        { test: /\.(png|jpeg|jpg|gif)$/,
          loader: 'url-loader',
          options: { limit: 1, name: 'img/[name].[ext]' } },
        { test: /\.html$/,
          loader: 'html-loader',
          options: { minimize: false, interpolate: true } },
        { test: /\.tpl$/,
          loader: 'html-loader',
          options: { minimize: false, interpolate: false } } ] },
  resolve: 
   { modules: [ 'node_modules' ],
     extensions: [ '.js', '.json', '.css', '.jpeg', '.png', '.jpg', '.tpl' ],
     alias: { normal: 'D:\\playground\\webpack2\\pages\\img\\normal-sprite.png' } },
  context: 'D:\\playground\\webpack2',
  target: 'web',
  plugins: 
   [ { options: 
        { apiOptions: 
           { generateSpriteName: [Function],
             cssImageRef: '~normal',
             customTemplates: {} },
          spritesmithOptions: {},
          spritesheetTemplatesOptions: { format: 'scss' },
          src: 
           { cwd: 'D:\\playground\\webpack2\\pages\\sprite\\normal',
             glob: '*.*' },
          target: 
           { image: 'D:\\playground\\webpack2\\pages\\img\\normal-sprite.png',
             css: 
              [ [ 'D:\\playground\\webpack2\\pages\\scss\\normal-sprite.scss',
                  { format: 'scss' } ] ] } },
       useRetinaTemplates: false,
       metaOutput: { warnings: [], errors: [] } },
     ExtractTextPlugin { filename: 'css/[name].css', id: 1, options: {} },
     CleanWebpackPlugin {
       paths: [ 'test' ],
       options: 
        { root: 'D:\\playground\\webpack2',
          verbose: true,
          allowExternal: false,
          dry: false } },
     OpenBrowserPlugin {
       url: 'http://test.sina.com.cn/',
       delay: 0,
       browser: undefined,
       ignoreErrors: undefined },
     CommonsChunkPlugin {
       chunkNames: [ 'vendor' ],
       filenameTemplate: undefined,
       minChunks: [Function],
       selectedChunks: undefined,
       children: undefined,
       async: undefined,
       minSize: undefined,
       ident: 'D:\\playground\\webpack2\\node_modules\\.2.4.1@webpack\\lib\\optimize\\CommonsChunkPlugin.js0' } ],
  entry: 
   { 'h5-demo': 'D:/playground/webpack2/pages/js/page/h5-demo.js',
     index: 'D:/playground/webpack2/pages/js/page/index.js',
     'pc-demo': 'D:/playground/webpack2/pages/js/page/pc-demo.js' },
  output: 
   { path: 'D:\\playground\\webpack2\\test',
     filename: 'js/[name].js',
     publicPath: 'http://test.sina.com.cn/',
     chunkFilename: 'js/[name]-chunk.js' } }